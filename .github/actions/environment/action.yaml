name: Set up environment
description: Install Python, plus dependencies from conda and pip
inputs:
  python-version:
    description: Python version to install. Used as a Conda version constraint.
    required: true
  package-artifact-name:
    description: Name of the emsarray Python package artifact
    required: false
    default: "Python package"
  dependencies:
    description: Install pinned, latest, or minimum dependency versions.
    required: false
    default: 'pinned'
  extras:
    description: Which set of emsarray 'extras' to install.
    required: false
    default: 'testing'
  strict:
    description: |
      Whether to install transitive dependencies automatically. When installing
      from a set of pinned dependencies the assumption is that all dependencies
      are pinned, so there should be no missing transitive dependencies.
    required: false
    default: 'false'

runs:
  using: composite

  steps:
      # Used for the pip cache, not for the python version
    - uses: actions/setup-python@v4
      with:
        cache: 'pip'
        cache-dependency-path: |
          continuous-integration/requirements-${{ inputs.python-version }}.txt
          continuous-integration/environment.yaml
          setup.cfg

    - name: Fetch built emsarray package
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.package-artifact-name }}
        path: "dist/"

    - name: Cache conda packages
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{
          hashFiles('continuous-integration/environment.yaml') }}

    - name: Install base Conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        environment-file: continuous-integration/environment.yaml
        python-version: ${{ inputs.python-version }}
        channels: conda-forge
    - shell: bash -l {0}
      run: |
        conda install -c conda-forge wheel

    - name: Install pinned dependencies
      if: ${{ inputs.dependencies == 'pinned' }}
      shell: bash -l {0}
      run: |
        wheels=( dist/emsarray-*.whl )
        args=()
        if [[ "${{ inputs.strict }}" == "true" ]] ; then args+=('--no-deps') ; fi

        pip install \
          "${args[@]}" \
          -r continuous-integration/requirements-${{ inputs.python-version }}.txt \
          "${wheels[0]}[${{ inputs.extras }}]"
        pip check

    - name: Install minimum supported version dependencies
      if: ${{ inputs.dependencies == 'minimum' }}
      shell: bash -l {0}
      run: |
        wheels=( dist/emsarray-*.whl )
        args=()
        if [[ "${{ inputs.strict }}" == "true" ]] ; then args+=('--no-deps') ; fi

        pip install \
          "${args[@]}" \
          -r continuous-integration/requirements-minimum.txt \
          "${wheels[0]}"
        pip check
        pip install \
          -r continuous-integration/requirements-minimum.txt \
          "${wheels[0]}[${{ inputs.extras }}]"

    - name: Install latest dependencies
      if: ${{ inputs.dependencies == 'latest' }}
      shell: bash -l {0}
      run: |
        wheels=( dist/emsarray-*.whl )
        pip install "${wheels[0]}[${{ inputs.extras }}]"
