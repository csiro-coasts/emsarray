name: Build, test, and lint
on:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.*"
  pull_request:
    branches:
      - "*"

  workflow_dispatch:

env:
  python-version: "3.11"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build-python-package
        id: build
        with:
          python-version: ${{ env.python-version }}

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: ["build"]

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/environment
        with:
          python-version: ${{ matrix.python-version }}
          package-artifact-name: ${{ needs.build.outputs.artifact-name }}

      - name: Run tests
        shell: bash -l {0}
        run: |
          pytest -v \
            --junitxml=junit-py${{ matrix.python-version }}.xml \
            --cov --cov-report term \
            --cov-report xml:coverage-${{ matrix.python-version }}.xml

      - name: JUnit Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: 'junit-py*.xml'
          check_name: "JUnit Test Report - Python ${{ matrix.python-version }}"

      - uses: actions/upload-artifact@v3
        with:
          name: Code coverage for Python ${{ matrix.python-version }}
          path: coverage-*.xml

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: ["build"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/environment
        with:
          python-version: ${{ env.python-version }}
          package-artifact-name: ${{ needs.build.outputs.artifact-name }}

      - name: 'mypy cache'
        uses: actions/cache@v3
        with:
          path: '.mypy_cache'
          key: mypy-${{ runner.os }}-py${{ env.python-version }}-${{ hashFiles('requirements.txt') }}

      - run: flake8 src/ tests/
      - run: isort --diff --check-only src/ tests/
      - run: mypy --junit-xml report-mypy.xml src/

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: ["build"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/environment
        with:
          python-version: ${{ env.python-version }}
          package-artifact-name: ${{ needs.build.outputs.artifact-name }}

      - run: |
          cd docs/
          sphinx-build -b dirhtml -aEW . _build/dirhtml

      - uses: actions/upload-artifact@v3
        with:
          name: Docs
          path: docs/_build/dirhtml
